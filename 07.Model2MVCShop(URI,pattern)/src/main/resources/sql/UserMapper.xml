<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">
 	
 	
	<resultMap id="userSelectMap" type="user">
		<result property="userId" 			column="user_id" 			jdbcType="VARCHAR"/>
		<result property="userName"	column="user_name" 		jdbcType="VARCHAR" />
		<result property="password" 	column="password" 		jdbcType="VARCHAR" />
		<result property="role" 				column="role" 					jdbcType="VARCHAR" />
		<result property="ssn" 				column="ssn" 					jdbcType="VARCHAR" />
		<result property="phone" 			column="cell_phone" 		jdbcType="VARCHAR" />
		<result property="addr" 				column="addr" 					jdbcType="VARCHAR" />
		<result property="email" 			column="email" 				jdbcType="NUMERIC"  />
		<result property="regDate" 		column="reg_date" 			jdbcType="DATE" />
		<result property="money"		column="money"				jdbcType="INTEGER" />
		<result property="wishPay"		column="wishpay"			jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="userSelectMap2" type="String">
		<result property="userId" 			column="user_id" 			jdbcType="VARCHAR"/>
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addUser"		parameterType="user" >
	 	INSERT
		INTO users( user_id , user_name , password , role , ssn, cell_phone, addr, email , reg_date, money, wishPay) 
		VALUES	 (	#{userId} , #{userName} , #{password} , 'user' , #{ssn:VARCHAR} , 
							#{phone:VARCHAR} , #{addr:VARCHAR} , #{email:VARCHAR} , SYSDATE, 0, 0 )
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getUser"	parameterType="string"	resultMap="userSelectMap">
		SELECT
		*	
		FROM users 
		WHERE user_id = #{value}
	 </select>
	 
	 <select id="getUserIdList" parameterType="string" resultMap="userSelectMap2">
	 	SELECT user_id
	 	FROM USERS
	 	WHERE user_id like '%'||#{value}||'%'
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateUser"	parameterType="user" >
	   	UPDATE users
	   	<trim prefix="SET" suffixOverrides=",">
	   		<if test="userName != null">user_name = #{userName} ,</if>
	   		<if test="password != null">password = #{password} ,</if>
			<if test="phone != null">cell_phone	= #{phone},</if>
			<if test="addr != null">addr = #{addr} ,</if>
			<if test="email != null">email	= #{email},</if>
			<if test="money != null">money = #{money},</if>
			<if test="wishPay != null">wishPay = #{wishPay},</if>
	   	</trim>
	   	WHERE user_id = #{userId}
	 </update>
	 
	 <update id="chargeWishPay" parameterType="map">
	 	UPDATE users
	 	<trim prefix="SET" suffixOverrides=",">
	 		<if test="wishPay!= null">WISHPAY = #{wishPay},</if>
	 	</trim>
	 	<where>
	 		user_id = #{userId}
	 	</where>
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getUserList"  parameterType="search"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT user_id , user_name , email
											FROM users
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				user_id like '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				user_name like '%'||#{searchKeyword}||'%'
													</if>
												</where>
											</if>
											ORDER BY user_id ) inner_table
		WHERE ROWNUM <![CDATA[ <= ]]> #{currentPage}*#{pageSize} ) 
		WHERE row_seq BETWEEN ( (#{currentPage}-1)*#{pageSize}+1) AND (#{currentPage}*#{pageSize})
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT user_id , user_name , email
						FROM users
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 		user_id = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 		user_name = #{searchKeyword}
								</if>
							</where>
						</if> ) countTable						
	 </select>
	 
</mapper>